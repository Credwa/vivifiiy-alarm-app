// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AlarmsList /> renders correctly 1`] = `
<RCTScrollView
  bounces={false}
  collapsable={false}
  data={
    Array [
      Array [
        "0730AM",
        Object {
          "active": true,
          "hour": "07",
          "key": "0730AM",
          "meridiem": "AM",
          "minute": "30",
        },
      ],
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  renderScrollComponent={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        collapsable={false}
        forwardedRef={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onLayout={[Function]}
        style={
          Object {
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": -10000,
                },
              ],
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "width": 75,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": -75,
                    },
                  ],
                }
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.105}
                collapsable={false}
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#38c1f2",
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
                underlayColor="black"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "black",
                      "borderBottomLeftRadius": undefined,
                      "borderBottomRightRadius": undefined,
                      "borderRadius": undefined,
                      "borderTopLeftRadius": undefined,
                      "borderTopRightRadius": undefined,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#869DB2",
                      },
                      Object {
                        "fontFamily": "Nunito_400Regular",
                        "fontSize": 17,
                      },
                      Object {
                        "color": "#CEE1F2",
                      },
                      undefined,
                    ]
                  }
                >
                  Edit
                </Text>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            onLayout={[Function]}
          />
        </View>
        <View
          style={
            Object {
              "bottom": 0,
              "flexDirection": "row-reverse",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": -10000,
                },
              ],
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "width": 75,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 75,
                    },
                  ],
                }
              }
            >
              <RNGestureHandlerButton
                activeOpacity={0.105}
                collapsable={false}
                onActiveStateChange={[Function]}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#bf3f3f",
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
                underlayColor="black"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "black",
                      "borderBottomLeftRadius": undefined,
                      "borderBottomRightRadius": undefined,
                      "borderRadius": undefined,
                      "borderTopLeftRadius": undefined,
                      "borderTopRightRadius": undefined,
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#869DB2",
                      },
                      Object {
                        "fontFamily": "Nunito_400Regular",
                        "fontSize": 17,
                      },
                      Object {
                        "color": "#CEE1F2",
                      },
                      undefined,
                    ]
                  }
                >
                  Delete
                </Text>
              </RNGestureHandlerButton>
            </View>
          </View>
          <View
            onLayout={[Function]}
          />
        </View>
        <View
          collapsable={false}
          forwardedRef={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          pointerEvents="auto"
          style={
            Object {
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View>
            <View
              style={
                Object {
                  "borderBottomColor": "#B1C2D1",
                  "borderWidth": 0.5,
                }
              }
            />
            <View
              style={
                Object {
                  "alignContent": "space-between",
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingVertical": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#869DB2",
                    },
                    Object {
                      "fontFamily": "Nunito_400Regular",
                      "fontSize": 44,
                    },
                    Object {
                      "color": "#869DB2",
                    },
                    undefined,
                  ]
                }
              >
                7
                :
                30
                 
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#869DB2",
                      },
                      Object {
                        "fontFamily": "Nunito_400Regular",
                        "fontSize": 34,
                      },
                      Object {
                        "color": "#869DB2",
                      },
                      undefined,
                    ]
                  }
                >
                  AM
                </Text>
              </Text>
              <RCTSwitch
                accessibilityRole="switch"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onTintColor="#D98436"
                style={
                  Array [
                    Object {
                      "height": 31,
                      "width": 51,
                    },
                    Array [
                      Object {
                        "transform": Array [
                          Object {
                            "scaleX": 0.85,
                          },
                          Object {
                            "scaleY": 0.85,
                          },
                        ],
                      },
                      Object {
                        "backgroundColor": "#869DB2",
                        "borderRadius": 16,
                      },
                    ],
                  ]
                }
                thumbTintColor="#CEE1F2"
                tintColor="#D98436"
                value={true}
              />
            </View>
            <View
              style={
                Object {
                  "borderBottomColor": "#B1C2D1",
                  "borderWidth": 0.5,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
